Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2023-02-03T18:55:12+02:00

====== Подключиться к NAS по ssh ======

В OMV ssh включён по-умолчанию, на ноуте юзера сервис ssh скорее всего есть, но может быть неактивным. Есть смысл перепроверить по [[Настройка OpenSSH#Проверить статус сервиса SSH|Проверить статус сервиса SSH]]. Здесь и далее подразумеваем, что 

	1. сервис ssh работает безупречно,
	2. на ноуте личный ssh-ключ уже сгенерирован и импортирован в систему (см. [[Сделать личный ssh-ключ]])
	3. NAS отзывается по IP ''192.168.1.20''
	4. на стороне NAS находится действующий юзер «''login''»
	5. мы залогинены в OMV через веб-интерфейс

===== Импортировать в OMV публичный ssh-ключ =====

Это стандартный способ закинуть свой ssh-ключ на удалённый сервер:

'''
ssh-copy-id login@192.168.50.20
'''

но в случае с OMV лучше добавлять личные ssh-ключи каждому пользователю по-отдельности. Поэтому:

1. На ноуте вывести в консоль содержимое файла с публичным ключом (настройки по-умолчанию):

''cat ∼/.ssh/id_rsa.pub''

2. Скопировать в буфер обмена содержимое файла *''.pub'', от первой строки до последней, в которой указан емайл юзера.
3. В веб-интерфейсе OMV перейти в Access Rights Management > User > Users > Выбрать своего юзера > Edit > Public keys > [+ Add]
4. Вставить содержимое буфера обмена (там наш публичный ключ) в предлагаемое поле. OMV просигнализирует, если текст будет неподходящим.
5. [Save / Apply / Yes]

===== Подключение к NAS по ssh =====

''ssh login@192.168.50.20''

Можно обратиться к ресурсу и по имени, если оно уже прописано в /etc/hosts, например:

''ssh login@tower.local''

===== Подключение с указанием ключа =====

Разумно, если ключей овердофига, и совершенно не нужно, если ключ один.
		
==== Подключение с указанием определенного ключа ====

Надо через '-i' указать его файл. Примеры:

	''ssh login@192.168.50.20 -i ~/.ssh/nas/nas_login''

	''ssh login@192.168.50.20 -i /home/ssh_keys/nas/nas_login''

В любом случе ждём дежурное сообщение о подключении к неизвестному источнику:

	''The authenticity of host '192.168.50.20 (192.168.50.20)' can't be established.''
	''ECDSA key fingerprint is SHA256:kMUXGtfu5aCMPjQkdz6H/5oi3XOn6uJwA84bqy1+ViM.''
	''Are you sure you want to continue connecting (yes/no/[fingerprint])?''

Ответить «yes». Это стандартная и условная, но всё-таки защита от вероятных ошибок при указании адреса подключения.

В консоли будет указан логи и ресурс, к которому произошло подключение:

	login@tower:~$ 

В файле ‘~/.ssh/known_hosts‘ появится запись о новом подключении. Если удалить этот файл или весь каталог '.ssh', то процесс «знакомства» повторится при последующем подключении.

В будущем вероятна ситуация, когда надо будет зайти по ssh на NAS с другого ноутбука под тем же юзером 'login' (для которого в OMV был прописан публичный ключ). Это подключение будет запрещено, если на новом ноуте не будет предварительно импортирован старый ssh-ключ. Решений несколько:
* или импортировать на новый ноутбук старый ssh-ключ
* или в OMV удалить запись про публичный ключ для существующего юзера 'login'
* или в OMV удалить существующего юзера 'login' и создать нового (с новым ssh-ключом)
* или в OMV создать нового юзера с другим именем, и не создавать для него ssh-подключение
* или в OMV создать нового юзера с другим именем, и создать для него новый ssh-ключ

===== Алиас в .bashrc =====

Теперь можно всё это упростить, прописав короткий алиас для команды подключения — см. [[Приложения:Сделать алиас в .bashrc]]

В дальнейшем вся аутентификация на данном ресурсе будет происходить по данному ключу. Подразумевается, что это повысит уровень безопасности подключений. Пока этот ключ не украдут со всем папкой ’∼/.ssh’, конечно.

//Next step//: [[Передача файлов по ssh]]
