Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2024-11-03T18:14:30+02:00

====== Включить NFS ======

Сделать shared folder (''v1''). Один и тот же shared folder может быть использован в разных сервисах одновременно — SMB, FTP, NFS. Просто подключаться к ним надо будет по-разному. В SMB можно увидеть весь список доступных shared folders в разделе Сеть (в Dolphin), а в NFS подразумевается, что ты заранее знаешь адрес/имя нужного каталога и монтируешь его в систему при необходимости (или на постоянной основе через редактирование ''/etc/fstab'').

Включить NFS.

Добавить shared folder:
* выбрать существующий (''v1'')
* Client — указать домашнюю сеть с параметрам “''0/24''”, например ''192.168.50.0/24''. 
	* Читается так: разрешить подключение всем, кто приходит из сети с IP от ''192.168.50.0'' до ''192.168.50.254''. „192.168.1.0/24” — это обозначение подсети в формате CIDR (Classless Inter-Domain Routing). ''24'' — это маска подсети, которая задаёт, сколько битов IP-адреса относятся к сети (в данном случае, 24 бита). В результате остаётся 8 битов для адресов внутри этой подсети, что даёт 256 возможных адресов (от ''192.168.1.0'' до ''192.168.1.255'').
* Permission — Read/Write
* Extra options 
	* или максимально либеральные — ''no_subtree_check,insecure,sync''
	* или сложные — ''subtree_check,secure,sync,no_root_squash''
		* sync: Рекомендуется для гарантии записи данных.
		* no_subtree_check: Ускоряет доступ, отключая проверку поддеревьев каталога.
		* no_root_squash: Дает root-пользователям на клиенте права root и на сервере (осторожно с этим параметром, если нужна безопасность).

===== Настройки безопасности подключения =====

А можно ли, как в smb, разрешить подключение только через чтение логина и пароля из файла /root/.nas_credentials? Нет. В NFS нет встроенной поддержки аутентификации по имени пользователя и паролю. Если нужен пароль для каждого подключения юзеров — надо использовать SMB.

Аутентификация в NFS обычно происходит 
* через идентификаторы пользователей (UID/GID),
* через ограничения доступа на уровне IP-адресов.

Есть несколько способов заморочиться безопасностью подключений под NFS:

==== 1. Использовать UID/GID для контроля доступа ====

Очевидно сложный подход — надо сделать так, чтобы идентификаторы пользователей (UID) и групп (GID) на сервере NFS и на клиентах совпадают. Например, если у вас есть пользователь с UID ''1000'' на клиенте, создайте пользователя с таким же UID на сервере. 

Права доступа к файлам будут зависеть от настроек на сервере, но пароли как таковые здесь не применяются.

Пример настройки NFS с UID/GID через записи в файле ''/etc/fstab'':

''192.168.50.20:/v2 /mnt/v2 nfs defaults,uid=1000,gid=100 0 0''

==== 2. Использование Kerberos для NFSv4 (для большей безопасности) ====

[[https://ru.wikipedia.org/wiki/Kerberos|Kerberos]], который поддерживается NFSv4. Это сетевой протокол для взаимной аутентификации клиента и сервера через криптографические ключи. Kerberos выступает как внешняя служба аутентификации. 

Kerberos требует наличия центра распределения ключей, поэтому надо сперва установить и настроить Kerberos-сервер (KDC), а также обеспечить его интеграции с NFS.

==== 3. Альтернативный способ защиты доступа с помощью /etc/exports ====

Можно ограничить доступ на сервере NFS, указав конкретные IP-адреса клиентов и ограничив их права до read-only. Например:

	''/путь_к_удаленному_каталогу 192.168.50.10(rw,sync,no_subtree_check)''

Для большей безопасности можно добавить параметры ''root_squash'' или ''all_squash'', чтобы клиенты подключались с минимальными правами.
