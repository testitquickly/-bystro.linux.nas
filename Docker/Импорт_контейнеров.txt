Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2023-07-10T21:50:23+03:00

====== Импорт контейнеров ======

Для тренировки добавим один из уже существующих контейнеров

'''
Services 
> Compose 
> Files
> [+ Add From Example]
'''
	* Example = dokuwiki
	* Name = dokuwiki
	* Save / Apply

Статус = Down

Кликнуть по строке с контейнером dokuwiki > [Up].

Статус = Up

''Services'' 
''> Compose'' 
''> Containers''

Там появился контейнер с dokuwiki.

Справа ссылки на сервис. По ним можно перейти.

 Portainer, and click on Stacks, you'll now see I have "Limited" control over Nextcloud now, where Jellyfin is still "total" as I've not moved it to the webUI.


45.png


So now, I'll just repeat this process, and move Jellyfin. Now portainer has "limited" access to my Jellyfin compose, and I can see it in the containers section of OMV


46.png

Now, one of the big advantages of stacks, is being able to easily modify and redeploy them. Now ryecoaaron and his wisdom, this plugin is just as easy. So right now, I only have a "Movies" directory assigned to Jellyfin. Lets say I want to Add a "TV" directory...


Go to Services/Compose/Files, and click on my Jellyfin file, and click the Edit button at the top

Scroll down to the volumes section, and add my "tv" volume (line 14 in the below pic), just like I would if I was updating a stack in Portainer.

47.png


Save and Apply

Click the jellyfin file and click the "up" arrow. This will redeploy jellyfin with your updates. Essentially, just like you were updating a Portainer stack

Now just go to jellyfin, and add your new library like normal.


Now, if you go to the "compose" folder we created earlier... You'll see all of your "files" are backed up there. So make this folder part of your backup process so in the event of a serious failure.. You have all your compose files saved and they will be pretty easy to redeploy.


Code

root@omv6-test:~# cd /srv/dev-disk-by-uuid-de4d3cf0-f186-4a01-9c75-d518c66176c5/compose/
root@omv6-test:/srv/dev-disk-by-uuid-de4d3cf0-f186-4a01-9c75-d518c66176c5/compose# ls
jellyfin  nextcloud
root@omv6-test:/srv/dev-disk-by-uuid-de4d3cf0-f186-4a01-9c75-d518c66176c5/compose# cd jellyfin/
root@omv6-test:/srv/dev-disk-by-uuid-de4d3cf0-f186-4a01-9c75-d518c66176c5/compose/jellyfin# ls
jellyfin.env  jellyfin.yml
root@omv6-test:/srv/dev-disk-by-uuid-de4d3cf0-f186-4a01-9c75-d518c66176c5/compose/jellyfin# 

Now at this point, if you want to keep Portainer around as a security blanket until you adapt to the new plugin.. You can keep it. Obviously you can't edit your stacks anymore, but you can still use it (personally I still have it as I'm still adapting to the plugin as well). Like I said earlier, the eventual goal, will be to dump Portainer, and use the plugin only.


Any questions, post in one of the 50 threads on this subject and I'm sure someone can help.

//Next step//: 
