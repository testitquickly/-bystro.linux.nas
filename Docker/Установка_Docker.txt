Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2023-07-10T19:05:48+03:00

====== Установка Docker ======

Прежде чем устанавливать Docker в OMV, есть смысл погонять его на своём ноуте.

	Пример: https://habr.com/ru/post/188362/ Как всё настроить по-быстрому" — это отдельная тема. Основы и установка просты, но с конфигами придётся повозиться.

===== Установить Docker =====

==== Обновить OMV по-максимуму ====

''System'' 
''> Update Management'' 
''> [Check]''

==== Прописать/проверить DNS server ====

Если IP-адрес NAS в настройках роутера был динамическим, то добавление гугловского днс этот IP-адрес поменяет. Если он уже был прописан, то вряд ли, но всё равно придётся глянуть для уверенности и проверить соеднение по ssh.

Если к NAS был предопределён доступ извне по IP, то IP-адрес будет изменён наверняка.

''8.8.8.8'' — это DNS Google. 

Можно указать другой, если есть под рукой.

'''
Network 
> Interfaces 
> отредактировать существующее подключение (Ethernet, конечно же) 
> Advanced settings 
> DNS servers = 8.8.8.8
'''

==== Создать нового юзера только для Docker ====

Это НЕ должен быть существующий root или юзер с ролью admin, поэтому надо сделать нового ([[Users:Добавить пользователей]]). Назовём его //mydoker// — да, нарочно без буквы «c»//.//

	Трижды перепроверить правильность пароля у этого юзера, иначе потом будут траблы на ровно месте.

Добавить нового юзера //mydoker// в группы 

	* docker
	* openmediavault_admin
	* openmediavault_config
	* sambashare
	* _ssh
	* sudo
	* users

Поставить галочку на „Disallow account modification”.

Проверить, что //mydoker// может зайти на NAS через ssh. Для этого надо будет [[SSH:Сделать личный ssh-ключ]].

	Его можно сделать или локально, или непосредственно на NAS.

Затем

''ssh mydoker@192.168.50.60'' (или какой там IP)

==== Убедиться в наличии ’User home directory’ ====

При первой настройке пользователей она была включена, но всё-таки.

'''
Users
> Settings 
User Home directory = Enabled
'''

==== Создать shared-каталоги для Docker ====

Можно положить их на один диск или на разные — nevermind, но надо учесть, что туда будет записываться много информации, поэтому лучше положить их на hdd с большим запасом.

Может показаться, что проще положить несколько каталогов в один общий каталог (это ок) и сделать только shared только головной. Но надо сделать отдельные каталоги для разных типов данных и надо каждый этот каталог сделать shared по-отдельности, потому что дальше в настройках надо будет указывать отдельные шары для отдельных операций.

Поэтому создаем на отдельном диске каталог „docker“ и внутри него каталоги

1. backup
2. composefiles
3. containers
4. data
5. downloads
6. media

* containers — это каталог, в котором уже находятся служебные файлы и в который будут сохраняться данные каждого контейнера. 
* downloads и media — опционально. Если на дисках уже есть каталог, в который будем сохранять файлы, то новый создавать не нужно.

Посему:

1. Выбрать подходящий диск
2. Создать в его корне каталог „docker“
3. Создать внутри него сразу несколько каталогов (downloads и media — опционально):

''mkdir backup composefiles containers data downloads media''

4. Сделать каждый из этих каталогов shared — [[SMB:Добавить shared-каталог]] — с настройками доступа «Everyone read/write».

Аккуратно к названиям каталогов. В системе не должно быть shared-каталогов с идентичным названием, даже если они «смотрят» в разные места. Разумно назвать докеровские shared-каталоги с приставкой вроде „dkr_backup”:

1. dkr_backup
2. dkr_composefiles
3. dkr_containers
4. dkr_data
5. dkr_downloads
6. dkr_media

==== Установка Docker ====

=== Установить плагин //openmediavault-resetperms// ===

В будущем настройки прав для каталога «appdata» придётся сбрасывать неоднократно, Docker иногда по-своему перезаписывает права доступа.

''System'' 
''> Plugins''
''> Поиск'' //''openmediavault-resetperms''//
''> Установить''

Использовать: 

''Access Rights Management'' 
''> Shared Folders'' 
''> Reset Permissions''

=== Установить плагин OMV-Extras ===

В OMV Docker приходит через установку плагина OMV-Extras — [[omv-extras]]

В итоге 
* должен появиться новый пункт меню: System > //omv-extras//
* в списке плагинов (System > Plugins) появляются новые плагины.

=== Включить Docker repo ===

''System'' 
''> omv-extras''
''поставить галочку для Docker-repo (вероятно, она уже поставлена)''

Кликнуть по [apt-clean] и дождаться финиша.

''System > Plugins''

=== Установить плагины для Docker ===

== //openmediavault-compose// ==

''System'' 
''> Plugins'' 
''> установить плагин'' //''openmediavault-compose''//

== //openmediavault-k8s// ==

Kubernetes plugin

''System'' 
''> Plugins'' 
''> установить плагин'' //''openmediavault-k8s''//

=== Проверить установленный Docker ===

Зайти на NAS по ssh и последовательно запросить информацию:

	1. ''docker --version''
	2. ''docker-compose --version''
	3. ''sudo docker info | grep Root''

Ожидаемый ответ после последней команды: 

''Docker Root Dir: /srv/dev-disk-by-uuid-abc01234…/docker/containers''

Иногда всё устанавливается в ''/var/lib/docker''. Если у нас в принципе один диск, то ок. Если же система на ssd, а всё остальное на hdd (как и полагается в nas), то это всё надо поменять. Там нужно постоянно под 50 Gb свободного места, кагбэ…

=== Перенести Docker Root Dir ===

1. Залогиниться на сервер под админом (можно под root, nevermind) 
2. остановить docker

''sudo systemctl stop docker''

''sudo systemctl stop docker.socket''

''sudo systemctl stop containerd''

3. перенести каталог „containers” c ''/srv/dev-disk-by-uuid-abc01234…/docker/containers'' на выбранный hdd в каталог docker/containers.
4. отредактировать файл (создать, если не существует) с настройками:

''mcedit /etc/docker/daemon.json''

В нём должна быть всего лишь строка с указанием на „корневой каталог Docker”. Отредактировать её, указав путь к новому каталогу:

''{''
  ''"data-root": "''__''/new_dir''__''/docker"''
''}''

Saved and close.

5. Перезапустить сервис Docker:

''sudo systemctl start docker''

Если всё ок, ответом будет тишина.

6. Проверить настройки:

''sudo docker info | grep Root''

7. Проверить дефолтное состояние докера

''docker ps''

Ожидаемый ответ: таблица с контейнерами

''CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES''

Она пустая, контейнеров нет.

===== Базовая настройка Docker =====

В меню OMV появляется новый пункт — Compose.

''Services''
''> Compose''
''> Settings''

Прописать каталоги, которые были созданы на [[#Создать shared-каталоги для Docker|предыдущем этапе]]:

Compose Files
	* Shared folder = //dkr_composefiles// [docker]
	* Owner = mydoker 
	* Group of directories = sudo
	* Permissions = Everyone - read/write

Data
	* Shared folder = //dkr_data// [docker]

Backup
	* Shared folder = //dkr_backup// [docker]

Docker
	* Docker storage = заменить на полный путь к каталогу ’docker/containers’ вроде „///srv/dev-disk-by-uuid-fbd681fd-e0cc-479d-b62f-5544f10f4317/docker/containers”//
	* Status = Installed and running
	* Docker version = оставить как есть
	* Compose version = оставить как есть

Сохранить настройки

	1. Save > Apply
	2. [Restart Docker] > Yes (это самое важное)

//Next step//: [[Настройка Docker]]
